// <auto-generated />
using System;
using AppointmentBooking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppointmentBooking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201205143739_SeedDatabase")]
    partial class SeedDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AppointmentBooking.Models.AppointmentModel", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PracticeId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("AppointmentBooking.Models.PatientModel", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Email = "niall@email.com",
                            FirstName = "Niall",
                            LastName = "Farren",
                            MobileNumber = "01234567895",
                            TelephoneNumber = "02877741764"
                        },
                        new
                        {
                            PatientId = 2,
                            Email = "shane@email.com",
                            FirstName = "Shane",
                            LastName = "Millar",
                            MobileNumber = "15562722374",
                            TelephoneNumber = "028777417321"
                        },
                        new
                        {
                            PatientId = 3,
                            Email = "oran@email.com",
                            FirstName = "Oran",
                            LastName = "Armstrong",
                            MobileNumber = "7475871",
                            TelephoneNumber = "028777782616"
                        },
                        new
                        {
                            PatientId = 4,
                            Email = "eoin@email.com",
                            FirstName = "Eoin",
                            LastName = "Campbell",
                            MobileNumber = "74477474",
                            TelephoneNumber = "02877741764"
                        },
                        new
                        {
                            PatientId = 5,
                            Email = "molly@email.com",
                            FirstName = "Molly",
                            LastName = "Carton",
                            MobileNumber = "34976643122",
                            TelephoneNumber = "02877711889"
                        },
                        new
                        {
                            PatientId = 6,
                            Email = "elaine@email.com",
                            FirstName = "Elaine",
                            LastName = "Hampson",
                            MobileNumber = "0279954242",
                            TelephoneNumber = "0287712313"
                        });
                });

            modelBuilder.Entity("AppointmentBooking.Models.PatientNoteModel", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PracticeId")
                        .HasColumnType("int");

                    b.HasKey("NoteId");

                    b.ToTable("PatientNote");
                });

            modelBuilder.Entity("AppointmentBooking.Models.PracticeModel", b =>
                {
                    b.Property<int>("PracticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PracticeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PracticeId");

                    b.ToTable("Practice");

                    b.HasData(
                        new
                        {
                            PracticeId = 1,
                            PracticeName = "Dentist"
                        },
                        new
                        {
                            PracticeId = 2,
                            PracticeName = "Physiotherapist"
                        },
                        new
                        {
                            PracticeId = 3,
                            PracticeName = "General Practitioner"
                        });
                });

            modelBuilder.Entity("AppointmentBooking.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Joe",
                            IsDeleted = false,
                            LastName = "Bloggs",
                            PasswordHash = "UNZLw9YDS1z22bSxQsfydF8lb802GaLF0nbaegFJKks=",
                            PasswordSalt = "8ObiA+LM9t9VASwrT5PFe+jZYQhsBFyq9NPipRGj3e0Z8rvt44uB8V8V53n6ftlbEbtLDaqx1M0xRikTz2lzAQ==",
                            UserName = "username1",
                            UserRoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            FirstName = "Sarah",
                            IsDeleted = false,
                            LastName = "Kelly",
                            PasswordHash = "kS/hbAdIb2QwTRr2wfqW7jLaochIs09hW5AAEZ6h0Mc=",
                            PasswordSalt = "1tilkvWD5AfSfK5FsnUk3LOmsM6Rjp2hBfkQnd57BnIdD32mgdpA3VPENMJW2799ij4hw7TZUbiBpcOxXF3XxA==",
                            UserName = "username2",
                            UserRoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            FirstName = "Paul",
                            IsDeleted = false,
                            LastName = "Anderson",
                            PasswordHash = "b3vCAn9cRm9rcIA+PPTyBcwi5aY7NFKlSM0Zimx9D/s=",
                            PasswordSalt = "YHwO5Ti8DoU6BlLenehDE+UdKYlWEeRatUEuOl+xL0CnwQrk/4/G+rtyIsug3heT5Buwi4WRcZoeG5I7x7oX5A==",
                            UserName = "username3",
                            UserRoleId = 3
                        });
                });

            modelBuilder.Entity("AppointmentBooking.Models.UserRoleModel", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            RoleDescription = "Practice Admin Staff"
                        },
                        new
                        {
                            UserRoleId = 2,
                            RoleDescription = "Reception Staff"
                        },
                        new
                        {
                            UserRoleId = 3,
                            RoleDescription = "Medical Parctitioner"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
