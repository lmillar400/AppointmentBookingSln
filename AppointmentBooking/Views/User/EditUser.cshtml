@model AppointmentBooking.Models.UserModel
@{
    ViewData["Title"] = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var roles = (IEnumerable<UserRoleModel>)ViewData["UserRoles"];
    var practitioners = (IEnumerable<PractitionerModel>)ViewData["Practitioners"];
}

<div class="alert alert-danger alert-dismissible fade" role="alert">
    <strong>Error!</strong> <span id="errorMsg"></span>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

@using (Html.BeginForm("UpdateUser", "User", FormMethod.Post))
{
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.PasswordHash)
    @Html.HiddenFor(model => model.PasswordSalt)
    <div class="form-group">
        <label for="drpRole">User Role</label>
        @Html.DropDownListFor(model => model.UserRoleId,
            roles.Select(x => new SelectListItem { Text = x.RoleDescription, Value = x.UserRoleId.ToString() }), "Select User Role", new { @class = "form-control" })
    </div>
    <div class="form-group" id="frmGrpPractitioner">
        <label for="drpPractitioner">Practitioner</label>
        @Html.DropDownListFor(model => model.PractitionerId,
            practitioners.Select(x => new SelectListItem { Text = x.PractitionerName, Value = x.PractitionerId.ToString() }), "Select Practitioner", new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="txtFirstName">First Name</label>
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter first name", @id = "txtFirstName" } })
    </div>
    <div class="form-group">
        <label for="txtLastName">Last Name</label>
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter last name", @id = "txtLastName" } })
    </div>
    <div class="form-group">
        <label for="txtUsername">Username</label>
        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", @id = "txtUserName" } })
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" id="Submit" class="btn btn-info" />
        </div>
    </div>

}


@section Scripts
{
    <script>
        $(document).ready(function () {
            $("#frmGrpPractitioner").hide();

            $("#drpRole").change(function () {
                var val = this.value;
                if (val == 3) {
                    $("#frmGrpPractitioner").show();
                }
                else {
                    $("#frmGrpPractitioner").hide();
                    $("#drpPractitioner").val($("#drpPractitioner option:first").val());
                }
            });

            var code = getSearchParams("error")
            if (code != null) {
                if (code == "1") {
                    $("#errorMsg").text("Username already exists!")
                    $(".alert").addClass("show");
                }
            }

        });

        function getSearchParams(k) {
            var p = {};
            location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (s, k, v) { p[k] = v })
            return k ? p[k] : p;
        }
    </script>
}